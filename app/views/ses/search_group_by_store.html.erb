<% content_for :head do %>
	<% if Rails.env == 'production' %>		
		<script src="http://maps.googleapis.com/maps/api/js?client=<%= Smellyleaf::Application.config.maps_api_key %>&v=3.16"></script>	
	<% else %>
		<script type="text/javascript" src="http://maps.google.com/maps/api/js"></script>			
	<% end %>		
	<!-- info box -->
	<script type="text/javascript" src="http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/src/infobox.js"></script>
	<!-- infinite scroll -->
	<% javascript_include_tag "jquery.infinitescroll.js" %>
<% end %>

<div id="item-search-results-map"></div>
			
<script type="text/javascript">
var g_map;
		function codeAddress() {
		    //In this case it gets the address from an element on the page, but obviously you  could just pass it to the method instead

		    geocoder = new google.maps.Geocoder();		    
		    var address = "la, ca";

		    geocoder.geocode( { 'address': address}, function(results, status) {
		      if (status == google.maps.GeocoderStatus.OK) {
		        //In this case it creates a marker, but you can get the lat and lng from the location.LatLng
		        console.log(results[0].geometry.location);
				var myOptions = {
					//zoom:15,
					zoom: 13,
					center: new google.maps.LatLng(results[0].geometry.location),
					mapTypeId: google.maps.MapTypeId.ROADMAP
				}
		        g_map = new google.maps.Map(document.getElementById("item-search-results-map"), myOptions);
		        g_map.setCenter(results[0].geometry.location);
		        var marker = new google.maps.Marker({
		            map: g_map, 
		            position: results[0].geometry.location,				            
		        });
		        						
		      } else {
		      	//breaking selenium?
		        //alert("Geocode was not successful for the following reason: " + status);
		      }
		    });
		  }
	google.maps.event.addDomListener(window, "load", codeAddress);
	
</script>

<% if @itemsearch.group(:store_id_str).groups.empty? %>
	<div class="alert alert-warning">
	    <strong>Sorry!</strong> Your search returned 0 results.
	</div>
<% end %>

<%
@itemsearch.group(:store_id_str).groups.each do |group|


  # By default, there is only one document per group (the highest
  # scoring one); if `limit` is specified (see below), multiple
  # documents can be returned per group  
  
  store = Store.find(group.hits[0].stored(:store_id))
  %>
<div id="search-results">  
  	<div class="item-search-result-container" latitude="<%= group.hits[0].stored(:store_latitude) %>" longitude="<%= group.hits[0].stored(:store_longitude) %>" store-name="<%= group.hits[0].stored(:store_name)%>" 
								item-name="" >
  		<div class = "image-and-meta-container">
  			<table>
  				<tr>
  					<td>
						<% imagename = 'weed'+ rand(1..3).to_s + '.jpg' %>
						<%= image_tag imagename, :class => "item-search-result-store-logo-grouped" %>
					</td>
					<td>
						<h4>
					  		<!-- name -->
					  		<a class = "search-results-store-name" href="<%= store_path(group.hits[0].stored(:store_id))%>" data-no-turbolink='true' >
								<% if group.hits[0].highlights(:store_name).size == 0 %>								
									<!-- have to do because just loading directly renders brackets and newlines -->
									<% group.hits[0].stored(:store_name).each do |word| %>
										<%= word %>
									<% end %>
								<% end %>
								<% group.hits[0].highlights(:store_name).each do |highlight| %>								    
								    <%= raw highlight.format  { |word| "<span class='highlight'> #{word} </span>"  } %>
								<% end %>
							</a>
							
						</h4>
						<div class="star-rank" >
							<!-- not pulling out of index, want most recent value -->
							<%= render partial: 'layouts/stars', locals: {score: store.stars} %>						
						</div>
						<div class ="search-results-store-badges">
							<%
				  	
							badges = [ ]
							if group.hits[0].stored(:store_deliveryservice)
								badges.push("deliveryservice")
							end
							if group.hits[0].stored(:store_acceptscreditcards)
								badges.push("acceptscreditcards")
							end
							if group.hits[0].stored(:store_atmaccess)
								badges.push("atmaccess")
							end
							if group.hits[0].stored(:store_automaticdispensingmachines)
								badges.push("automaticdispensingmachines")
							end
							if group.hits[0].stored(:store_firsttimepatientdeals)
								badges.push("firsttimepatientdeals")
							end
							if group.hits[0].stored(:store_handicapaccess)
								badges.push("handicapaccess")
							end
							if group.hits[0].stored(:store_loungearea)
								badges.push("loungearea")
							end
							if group.hits[0].stored(:store_petfriendly)
								badges.push("petfriendly")
							end
							if group.hits[0].stored(:store_securityguard)
								badges.push("securityguard")
							end
							if group.hits[0].stored(:store_eighteenplus)
								badges.push("eighteenplus")
							end
							if group.hits[0].stored(:store_twentyoneplus)
								badges.push("twentyoneplus")
							end
							if group.hits[0].stored(:store_hasphotos)
								badges.push("hasphotos")
							end
							if group.hits[0].stored(:store_labtested)
								badges.push("labtested")
							end
							if group.hits[0].stored(:store_onsitetesting)
								badges.push("onsitetesting")
							end
							%>
							<% badges.each do |badge| %>								    
								<span class="badge search-store-badge-<%= badge %>"><%= badge %></span>
							<% end %>
						</div>	
					    <!-- store address -->
						<% if  group.hits[0].stored(:store_addressline1) && !group.hits[0].stored(:store_addressline1).empty?  %>
							<% group.hits[0].stored(:store_addressline1).each do |word| %>
								<%= word %>
							<% end %>								
						<% end %>
						<% if  group.hits[0].stored(:store_addressline2) && !group.hits[0].stored(:store_addressline2).empty?  %>
							<% group.hits[0].stored(:store_addressline2).each do |word| %>
								<%= word %>
							<% end %>								
						<% end %>
						<% if  group.hits[0].stored(:store_city) && !group.hits[0].stored(:store_city).empty?  %>
							<% group.hits[0].stored(:store_city).each do |word| %>
								<%= word %>
							<% end %>
						<% end %>
						<% if  group.hits[0].stored(:store_state) && !group.hits[0].stored(:store_state).empty?  %>
							<% group.hits[0].stored(:store_state).each do |word| %>
								<%= word %>
							<% end %>
						<% end %>
						<% if  group.hits[0].stored(:store_zip) && !group.hits[0].stored(:store_zip).empty?  %>
							<% group.hits[0].stored(:store_zip).each do |word| %>
								<%= word %>
							<% end %>
						<% end %>
						</br>
						<% if  group.hits[0].stored(:store_phonenumber) && !group.hits[0].stored(:store_phonenumber).empty?  %>
							<% group.hits[0].stored(:store_phonenumber).each do |word| %>
								<%= word %>
							<% end %>
						<% end %>

		
					</td>
				</tr>
			</table>
		  	
		</div>
  	</div>

  <%

  if !@itemcollapsed
  group.hits.each do |item| %>
  	

	<div class = "item-search-result-container-grouped">
		<div class = "image-and-meta-container">
			<table>
				<tr>
					<td class="image-td" valign="top">
						<% imagename = 'weed'+ rand(1..3).to_s + '.jpg' %>
						<%= image_tag imagename, :class => "item-search-result-image-grouped" %>
					</td>


					<td class="item-search-result-meta">
						<h5 class="item-search-item-name">
							<!-- dvu: we don't use link_to because the link name is too complicated to embed -->
						  	<a data-remote="<%= store_store_item_path(item.stored(:store_id), item.stored(:id)) %>" data-target="#modal" data-toggle="modal" 
						  		href="<%= store_store_item_path(item.stored(:store_id), item.stored(:id)) %>" >
								<% if item.highlights(:name).size == 0 %>								
									<!-- have to do because just loading directly renders brackets and newlines -->
									<% item.stored(:name).each do |word| %>
										<%= word %>
									<% end %>
								<% end %>
								<% item.highlights(:name).each do |highlight| %>								    
								    <%= raw highlight.format  { |word| "<span class='highlight'> #{word} </span>"  } %>
							    <% end %>
							</a>
							<%
							if !(item.stored(:maincategory).nil? || item.stored(:maincategory).empty?)
								itemcategory = item.stored(:maincategory)
								case itemcategory
									# ['flower', 'concentrate', 'edible', 'pre-roll', 'other', 'accessory']
									when "flower"
										%>
										<table class= "small pull-right search-results-item-price-table">
											<tr>												
												<th>1g</th>
												<th>1/8oz</th>
												<th>1/4oz</th>
												<th>1/2oz</th>
												<th>1oz</th>
											</tr>
											<tr>												
												<td <% if @filterpriceby == "gram" %>
														class = "highlight"
													<% end %>
												>
													<%= item.stored(:costonegram) %>
												</td>
												<td <% if @filterpriceby == "eighth" %>
														class = "highlight"
													<% end %>
												>
													<%= item.stored(:costeighthoz) %>
												</td>
												<td <% if @filterpriceby == "quarteroz" %>
														class = "highlight"
													<% end %>
												>
													<%= item.stored(:costquarteroz) %>
												</td>
												<td <% if @filterpriceby == "halfoz" %>
														class = "highlight"
													<% end %>
												>
													<%= item.stored(:costhalfoz) %>
												</td>
												<td <% if @filterpriceby == "oz" %>
														class = "highlight"
													<% end %>
												>
													<%= item.stored(:costoneoz) %>
												</td>
											</tr>
										</table>
										<%	
									when "concentrate"
										%>
										<table class= "small pull-right search-results-item-price-table">
											<tr>
												<th></th>
												<th></th>
												<th>1/2g</th>
												<th>1g</th>
												<th>1/8oz</th>												
											</tr>
											<tr>
												<td></td>
												<td></td>
												<td <% if @filterpriceby == "halfgram" %>
														class = "highlight"
													<% end %>
												>
													<%= item.stored(:costhalfgram) %>
												</td>
												<td <% if @filterpriceby == "gram" %>
														class = "highlight"
													<% end %>
												>
													<%= item.stored(:costonegram) %>
												</td>
												<td <% if @filterpriceby == "eighth" %>
														class = "highlight"
													<% end %>
												>
													<%= item.stored(:costeighthoz) %>
												</td>
																							
											</tr>
										</table>
										<%	
									else
										%>
										<table class= "small pull-right search-results-item-price-table">
											<tr>
												<th></th>
												<th></th>
												<th></th>
												<th></th>												
												<th>each</th>												
											</tr>
											<tr>
												<td></td>
												<td></td>
												<td></td>
												<td></td>				
												<td <% if @filterpriceby == "gram" %>
														class = "highlight"
													<% end %>
												>
													<%= item.stored(:costperunit) %>
												</td>
												
											</tr>
										</table>
										<%		
									#switch
									end %>
								<% end #if %>
							
						</h5>
						<div class="star-rank">
							<span class="glyphicon glyphicon-star"></span>
							<span class="glyphicon glyphicon-star"></span>
							<span class="glyphicon glyphicon-star"></span>
							<span class="glyphicon glyphicon-star"></span>
							<span class="glyphicon glyphicon-star"></span>		
						</div>
						<div class ="search-results-item-badges">
							<%
							badges = [ ]
								# if item.stored(:og)
								# 	badges.push("og")
								# end
								# if item.stored(:kush)
								# 	badges.push("kush")
								# end
								# if item.stored(:haze)
								# 	badges.push("haze")
								# end
								if !(item.stored(:cultivation).nil? || item.stored(:cultivation).empty?)
									badges.push(item.stored(:cultivation))																
								end
								if item.stored(:dogo)
									badges.push("bogo")
								end
								if item.stored(:topshelf)
									badges.push("topshelf")
								end
								if item.stored(:privatereserve)
									badges.push("privatereserve")
								end
								if item.stored(:organic)
									badges.push("organic")
								end
								if item.stored(:sugarfree)
									badges.push("sugarfree")
								end
								if item.stored(:glutenfree)
									badges.push("glutenfree")
								end
								if item.stored(:supersize)
									badges.push("supersize")
								end


							%>
							<% badges.each do |badge| %>								    
								<span class="badge search-item-badge-<%= badge %>"><%= badge %></span>
							<% end %>
							
						</div>
						<div>
						    
							<%
								straincat = [ ]
								
								if !(item.stored(:strain).nil? || item.stored(:strain).empty?)
									strainstr = "strain: #{item.stored(:strain)}"
									straincat.push(strainstr)
								end	
								if !(item.stored(:maincategory).nil? || item.stored(:maincategory).empty?)
									categorystr = "category: #{item.stored(:maincategory)}"
									straincat.push(categorystr)
								end
								if !(item.stored(:subcategory).nil? || item.stored(:subcategory).empty?)	
									subcatstr = "subcategory: #{item.stored(:subcategory)}"
									straincat.push(subcatstr)
								end	
							%>
							<div class="search-result-item-category-strain-meta">
								<%= straincat.join ' | '  %> 
							</div>

							<%
								lab = []
								if !(item.stored(:thc).nil? )
									thcstr = "thc: #{item.stored(:thc)}"
									lab.push(thcstr)
								end
								if !(item.stored(:cbd).nil? )
									cbdstr = "cbd: #{item.stored(:cbd)}"
									lab.push(cbdstr)
								end
								if !(item.stored(:cbn).nil? )
									cbnstr = "cbn: #{item.stored(:cbn)}"
									lab.push(cbnstr)
								end
							%>

							<div class="search-result-item-lab-meta">
								<%= lab.join ' | '	 %>
							</div>						
							
							<div class="search-result-item-promo">								
								<% if !item.highlights(:promo).nil? && !item.stored(:promo).nil? %>
									<% if item.highlights(:promo).size == 0 %>
											<!-- have to do because just loading directly renders brackets and newlines -->
											<% item.stored(:promo).each do |word| %>
												<%= word %>
											<% end %>
										<% end %>
										<% item.highlights(:promo).each do |highlight| %>								    
										    <%= raw highlight.format  { |word| "<span class='highlight'> #{word} </span>"  } %>
									    <% end %>							
								<% end %>
							</div>

							<% if  item.stored(:description) && !item.stored(:description).empty?  %>
								<div class="item-search-item-description">
									<!-- if there are no highlight matches, nothing is rendered without this -->
									<% if item.highlights(:description).size == 0 %>
										<!-- have to do because just loading directly renders brackets and newlines -->
										<% item.stored(:description).each do |word| %>
											<%= word %>
										<% end %>
									<% end %>
									<% item.highlights(:description).each do |highlight| %>								    
									    <%= raw highlight.format  { |word| "<span class='highlight'> #{word} </span>"  } %>
								    <% end %>
								</div>								
							<% end %>
							
							

						</div>
					</td>
				</tr>
			</table>
		</div>
		<!-- <div class="glyphicon glyphicon-user item-search-user-logo"></div>
		<span>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent ornare ante id sapien ullamcorper, vel pharetra nulla pulvinar. Nullam orci est, dapibus sit amet risus in, ultricies mattis turpis. Aliquam laoreet cursus libero, sed porta est auctor quis. Integer leo nibh, ultricies 
		</span> -->
	</div>

  <% end%> <!-- each -->  
  <% end%> <!-- if -->  
<% end %>

</div> <!-- search-results -->
<% if !@isLastPage %>
	<a href = <%= @nextlink %> id="search-next">Next </a>
<% end %>

<div class="infobox-wrapper">
    <div id="infobox">
        The contents of your info box. It's very easy to create and customize.
    </div>
</div>
<script>
//http://stackoverflow.com/questions/7616666/google-maps-api-v3-custom-styles-for-infowindow
var g_infobox = new InfoBox({
         content: document.getElementById("infobox"),
         disableAutoPan: false,
         maxWidth: 150,
         pixelOffset: new google.maps.Size(-140, 0),
         zIndex: 3000,
         boxStyle: {
            background: "url('http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/examples/tipbox.gif') no-repeat",
            opacity: 0.75,
            width: "280px"
        },
        closeBoxMargin: "12px 4px 2px 2px",
        closeBoxURL: "http://www.google.com/intl/en_us/mapfiles/close.gif",
        infoBoxClearance: new google.maps.Size(1, 1)
    });

(window.initHoverForSearchResults = function() {
	$( ".item-search-result-container" ).hover(function(e) {
		$(this).addClass('search-item-hover-focus');

		e.preventDefault();
		lat = $( this ).attr('latitude')
		long = $( this ).attr('longitude')
		storename_unscrubbed = $( this ).attr('store-name')
		itemname_unscrubbed = $( this ).attr('item-name')
		
		storename = storename_unscrubbed.replace(/\[\"/g , "");
		storename = storename.replace(/\"\]/g , "");
		itemname = itemname_unscrubbed.replace(/\[\"/g , "");
		itemname = itemname.replace(/\"\]/g , "");	

		// var image = './assets/leaf.png';
		var image = '<%= asset_path 'leaf.png' %>';
		var loc = new google.maps.LatLng(lat,long)
		marker = new google.maps.Marker({
		    	position: loc,
		        map: g_map,
		        icon: image
			});

		//g_map.setCenter(marker.getPosition());
		g_map.panTo(marker.getPosition())
		$("#infobox").html(itemname + ' @ ' + storename);
		g_infobox.open(g_map, marker);
		}
		, 
		function() {
		$(this).removeClass('search-item-hover-focus');
		}
	);
})(); //initHoverForSearchResults


/** for large desktops, we want the map to shift to the right.  For mobile and small screens, we just hide the map **/
(function($) {
    var $window = $(window),
        $item_search_results_map = $('#item-search-results-map');

    $window.resize(function resize(){
    	console.log('resizing');
        if ($window.width() < 700) {
        	console.log('width less than 700')
         	$item_search_results_map.addClass('search-items-map-mobile');
         	$item_search_results_map.removeClass('search-items-map')
            return
        }

        $item_search_results_map.removeClass('search-items-map-mobile');
        $item_search_results_map.addClass('search-items-map')
    }).trigger('resize');
})(jQuery);

// infinitescroll() is called on the element that surrounds 
// the items you will be loading more of
  $('#search-results').infinitescroll({
 
    navSelector  : "#search-next",               
                   // selector for the paged navigation (it will be hidden)
    nextSelector : "#search-next",    
    
                   // selector for the NEXT link (to page 2)
    itemSelector : ".item-search-result-container",         
                   // selector for all items you'll retrieve
    donetext     : "No more results.",
	loading: {
    	msgText		 : "Loading more search results.."
    }
  }, window.initHoverForSearchResults );

</script>

