<% content_for :head do %>
	<% if Rails.env == 'production' %>		
		<script src="http://maps.googleapis.com/maps/api/js?client=<%= Smellyleaf::Application.config.maps_api_key %>&v=3.16"></script>	
	<% else %>
		<script type="text/javascript" src="http://maps.google.com/maps/api/js"></script>			
	<% end %>		
	<!-- info box -->
	<script type="text/javascript" src="http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/src/infobox.js"></script>
	<!-- infinite scroll -->
	<% javascript_include_tag "jquery.infinitescroll.js" %>
<% end %>

<div id="item-search-results-map"></div>
			
<script type="text/javascript">
var g_map;
		function codeAddress() {
		    //In this case it gets the address from an element on the page, but obviously you  could just pass it to the method instead

		    geocoder = new google.maps.Geocoder();		    
		    var address = "la, ca";

		    geocoder.geocode( { 'address': address}, function(results, status) {
		      if (status == google.maps.GeocoderStatus.OK) {
		        //In this case it creates a marker, but you can get the lat and lng from the location.LatLng
		        console.log(results[0].geometry.location);
				var myOptions = {
					//zoom:15,
					zoom: 13,
					center: new google.maps.LatLng(results[0].geometry.location),
					mapTypeId: google.maps.MapTypeId.ROADMAP
				}
		        g_map = new google.maps.Map(document.getElementById("item-search-results-map"), myOptions);
		        g_map.setCenter(results[0].geometry.location);
		        var marker = new google.maps.Marker({
		            map: g_map, 
		            position: results[0].geometry.location,				            
		        });
		        						
		      } else {
		      	//breaking selenium?
		        //alert("Geocode was not successful for the following reason: " + status);
		      }
		    });
		  }
	google.maps.event.addDomListener(window, "load", codeAddress);
	
</script>

<% if @itemsearch.group(:store_id_str).groups.empty? %>
	<div class="alert alert-warning">
	    <strong>Sorry!</strong> Your search returned 0 results.
	</div>
<% end %>
<div class="search-summary">
  <div>
    <span class="search-query-summary">"<%= @search.isl %>" </span>
    <hr class="search-summary-hr" />
    <div>
    <% if @searchbadges.size > 0 %>	
    	<span class="search-filter-label">filters:</span>
    <% end %>
    <% @searchbadges.each do |searchbadge| %>
      <span class="search-badge" %><%= searchbadge %> </span>
    <% end %>
    </div>
  </div>
</div> 


<div id="search-results">
<%
@itemsearch.group(:store_id_str).groups.each do |group|


  # By default, there is only one document per group (the highest
  # scoring one); if `limit` is specified (see below), multiple
  # documents can be returned per group  
  
  
  %>  	
  	<%= render partial: 'ses/store_search_result', locals: {group: group, counter: @counter} %>			  
	<% @counter = @counter + 1 %>  
<% end %>


</div> <!-- search-results -->
<% if !@isLastPage %>
	<a href = <%= @nextlink %> id="search-next">Next </a>
<% end %>

<div class="infobox-wrapper">
    <div id="infobox">
        The contents of your info box. It's very easy to create and customize.
    </div>
</div>
<script>
//http://stackoverflow.com/questions/7616666/google-maps-api-v3-custom-styles-for-infowindow
var g_infobox = new InfoBox({
         content: document.getElementById("infobox"),
         disableAutoPan: false,
         maxWidth: 150,
         pixelOffset: new google.maps.Size(-140, 0),
         zIndex: 3000,
         boxStyle: {
            background: "url('http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/examples/tipbox.gif') no-repeat",            
            width: "280px"
        },
        closeBoxMargin: "12px 4px 2px 2px",
        closeBoxURL: "http://www.google.com/intl/en_us/mapfiles/close.gif",
        infoBoxClearance: new google.maps.Size(1, 1)
    });

(window.initHoverForSearchResults = function() {
	$( ".item-search-result-container" ).hover(function(e) {		
		$(this).find(".image-td").addClass('image-td-hover');

		e.preventDefault();
		lat = $( this ).attr('latitude')
		long = $( this ).attr('longitude')
		storename_unscrubbed = $( this ).attr('store-name')
		itemname_unscrubbed = $( this ).attr('item-name')
		
		storename = storename_unscrubbed.replace(/\[\"/g , "");
		storename = storename.replace(/\"\]/g , "");
		itemname = itemname_unscrubbed.replace(/\[\"/g , "");
		itemname = itemname.replace(/\"\]/g , "");	

		
		var loc = new google.maps.LatLng(lat,long)
		marker = new google.maps.Marker({
		    	position: loc,
		        map: g_map
			});

		//g_map.setCenter(marker.getPosition());
		g_map.panTo(marker.getPosition())
		$("#infobox").html(itemname + ' @ ' + storename);
		g_infobox.open(g_map, marker);
		}
		, 
		function() {			
			$(this).find(".image-td").removeClass('image-td-hover');
		}
	);
})(); //initHoverForSearchResults


/** for large desktops, we want the map to shift to the right.  For mobile and small screens, we just hide the map **/
(function($) {
    var $window = $(window),
        $item_search_results_map = $('#item-search-results-map');

    $window.resize(function resize(){
    	console.log('resizing');
        if ($window.width() < 700) {
        	console.log('width less than 700')
         	$item_search_results_map.addClass('search-items-map-mobile');
         	$item_search_results_map.removeClass('search-items-map')
            return
        }

        $item_search_results_map.removeClass('search-items-map-mobile');
        $item_search_results_map.addClass('search-items-map')
    }).trigger('resize');
})(jQuery);

// infinitescroll() is called on the element that surrounds 
// the items you will be loading more of
  $('#search-results').infinitescroll({
 
    navSelector  : "#search-next",               
                   // selector for the paged navigation (it will be hidden)
    nextSelector : "#search-next",    
    
                   // selector for the NEXT link (to page 2)
    itemSelector : ".item-search-result-container",         
                   // selector for all items you'll retrieve
    donetext     : "No more results.",
	loading: {
    	msgText		 : "Loading more search results.."
    }
  }, window.initHoverForSearchResults );

</script>

