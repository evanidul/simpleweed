<% if  @store.description && !@store.description.empty?  %>			
	<div class="header-and-edit-link">
		<h4 class = "inline-header">description </h4>			
		<% if @role_service.canManageStore(current_user, @store) %>
			 <%= link_to edit_description_store_path(@store), data: { toggle: "modal", target: "#modal", remote: edit_description_store_path(@store)} , id: "edit-description-link",  class: "btn edit-store-link" , "data-content"=>"<span id='edit-links-tip'>edit links are now available for you to manage your store.</span>" do %>
    					<span class="glyphicon glyphicon-edit"></span>
			<% end %>	
			 <% if params[:show_edit_popover] == "true" %>				 
				 <script>				 
				 $(function () {
					  $('#edit-description-link').popover({ 
					    html : true,
					    placement : "left"
					  }).popover('show');
					});
				 </script>
			 <% end %> <!-- show pop up? -->
		<% end %> <!-- if store manager -->
	</div>
	<p id="description">				
		<%= raw @store.description %>								
	</p> 
<% end %>
			

<h3 class= "inline-header">menu</h3>
<% if @role_service.canManageStore(current_user, @store) %>		  	  		
	<%= link_to store_store_items_path(@store), class: 'btn store-edit-link edit-store-link' , id: "edit_store_items" , 'data-no-turbolink' => true do %>
		<span class="glyphicon glyphicon-edit"></span>
	<% end %>
	
	</br></br>
<% end %>
		
<div id="accordion">			
	<% @grouped_store_items.each do |maincategory, store_items| %>
		<h3><%= maincategory %></h3>
		<div> <!-- empty div required for jquery accordion -->			
			<div id="table_<%= maincategory %>" ></div>

<script>
	(function drawTable() {
	  var category = "<%=  store_items.first.maincategory %>";	  
	  var pricePerUnit = "<%=  store_items.first.costperunit %>";
	  var data = new google.visualization.DataTable();

	  switch (category) {
	  		case "flower":
	  			data.addColumn('string', 'hiddenlink');
		  		data.addColumn('string', '');
			  	data.addColumn('string', 'strain');	  
			  	data.addColumn('string', 'subcategory');	  
			  	data.addColumn('string', '1g');
			  	data.addColumn('string', '1/8');
			  	data.addColumn('string', '1/4');
			  	data.addColumn('string', '1/2');
			  	data.addColumn('string', '1 oz');
			  	var view = new google.visualization.DataView(data);
	  			view.setColumns([1,2,3,4,5,6,7,8]); 
	  		break;
	  		case "concentrate":
	  			data.addColumn('string', 'hiddenlink');
	  			data.addColumn('string', '');
			  	data.addColumn('string', 'strain');	  
			  	data.addColumn('string', 'subcategory');	  
		  		data.addColumn('string', '1/2g');
			  	data.addColumn('string', '1g');
			  	data.addColumn('string', '1/8');
			  	var view = new google.visualization.DataView(data);
	  			view.setColumns([1,2,3,4,5,6]); 
	  		break;
	  		case "edible":
	  			data.addColumn('string', 'hiddenlink');
	  			data.addColumn('string', '');
			  	data.addColumn('string', 'strain');	  
			  	data.addColumn('string', 'subcategory');	  
			  	data.addColumn('string', 'each');
			  	var view = new google.visualization.DataView(data);
	  			view.setColumns([1,2,3,4]); 
	  		break;
	  		case "pre-roll":
	  			data.addColumn('string', 'hiddenlink');
	  			data.addColumn('string', '');
			  	data.addColumn('string', 'strain');	  
			  	data.addColumn('string', 'subcategory');	  
			  	data.addColumn('string', 'each');
			  	var view = new google.visualization.DataView(data);
	  			view.setColumns([1,2,3,4]); 
	  		break;
	  		case "other":
	  			data.addColumn('string', 'hiddenlink');
	  			data.addColumn('string', '');
			  	data.addColumn('string', 'strain');	  
			  	data.addColumn('string', 'subcategory');	  
			  	data.addColumn('string', 'each');
			  	var view = new google.visualization.DataView(data);
	  			view.setColumns([1,2,3,4]); 
	  		break;
	  		case "accessory":
	  			data.addColumn('string', 'hiddenlink');
	  			data.addColumn('string', '');
			  	data.addColumn('string', 'strain');	  
			  	data.addColumn('string', 'subcategory');	  
			  	data.addColumn('string', 'each');
			  	var view = new google.visualization.DataView(data);
	  			view.setColumns([1,2,3,4]); 
	  		break;
	  }

        <% store_items.each do |store_item|
			badges = [ ]
			
			if !(store_item.cultivation.nil? || store_item.cultivation.empty?)
				badges.push(store_item.cultivation)																
			end
			if store_item.dogo
				badges.push("bogo")
			end
			if store_item.topshelf
				badges.push("topshelf")
			end
			if store_item.privatereserve
				badges.push("privatereserve")
			end
			if store_item.organic
				badges.push("organic")
			end
			if store_item.sugarfree
				badges.push("sugarfree")
			end
			if store_item.glutenfree
				badges.push("glutenfree")
			end
			if store_item.supersize
				badges.push("supersize")
			end
         %>

			switch (category) {	
		  		case "flower":
			  		data.addRow(['<%= link_to store_item.name, store_store_item_path(@store, store_item, :storetab => "false"),  data: { toggle: "modal", target: "#modal" , remote: store_store_item_path(@store, store_item, :storetab => "false")} %><% badges.each do |badge| %><span class="badge search-item-badge-<%= badge %>"><%= badge %></span>&nbsp;<% end %>',
			  		'<%= store_item.name %>',
					'<%= store_item.strain %>',
					'<%= store_item.subcategory %>',
		    		'<%= store_item.costonegram %>','<%= store_item.costeighthoz %>',
		     		'<%= store_item.costquarteroz %>','<%= store_item.costhalfoz %>','<%= store_item.costoneoz %>']);	
		  		break;
		  		case "concentrate":
		  			data.addRow(['<%= link_to store_item.name, store_store_item_path(@store, store_item , :storetab => "false"),  data: { toggle: "modal", target: "#modal" , remote: store_store_item_path(@store, store_item, :storetab => "false")} %><% badges.each do |badge| %><span class="badge search-item-badge-<%= badge %>"><%= badge %></span>&nbsp;<% end %>',
	  				'<%= store_item.name %>',
					'<%= store_item.strain %>',
					'<%= store_item.subcategory %>',
		    		'<%= store_item.costhalfgram %>','<%= store_item.costonegram %>','<%= store_item.costeighthoz %>']);	
		  		break;
		  		case "edible":
		  			data.addRow(['<%= link_to store_item.name, store_store_item_path(@store, store_item, :storetab => "false"),  data: { toggle: "modal", target: "#modal" , remote: store_store_item_path(@store, store_item, :storetab => "false")} %><% badges.each do |badge| %><span class="badge search-item-badge-<%= badge %>"><%= badge %></span>&nbsp;<% end %>',
		  			'<%= store_item.name %>',	
		    		'<%= store_item.strain %>',
		    		'<%= store_item.subcategory %>',
		    		'<%= store_item.costperunit %>']);
		  		break;
		  		case "pre-roll":
		  			data.addRow(['<%= link_to store_item.name, store_store_item_path(@store, store_item, :storetab => "false"),  data: { toggle: "modal", target: "#modal" , remote: store_store_item_path(@store, store_item, :storetab => "false")} %><% badges.each do |badge| %><span class="badge search-item-badge-<%= badge %>"><%= badge %></span>&nbsp;<% end %>',
		  			'<%= store_item.name %>',	
		    		'<%= store_item.strain %>',
		    		'<%= store_item.subcategory %>',
		    		'<%= store_item.costperunit %>']);
		  		break;
		  		case "other":
		  			data.addRow(['<%= link_to store_item.name, store_store_item_path(@store, store_item, :storetab => "false"),  data: { toggle: "modal", target: "#modal" , remote: store_store_item_path(@store, store_item, :storetab => "false")} %><% badges.each do |badge| %><span class="badge search-item-badge-<%= badge %>"><%= badge %></span>&nbsp;<% end %>',
		  			'<%= store_item.name %>',	
		    		'<%= store_item.strain %>',
		    		'<%= store_item.subcategory %>',
		    		'<%= store_item.costperunit %>']);
		  		break;
		  		case "accessory":
		  			data.addRow(['<%= link_to store_item.name, store_store_item_path(@store, store_item, :storetab => "false"),  data: { toggle: "modal", target: "#modal" , remote: store_store_item_path(@store, store_item, :storetab => "false")} %><% badges.each do |badge| %><span class="badge search-item-badge-<%= badge %>"><%= badge %></span>&nbsp;<% end %>',
		  			'<%= store_item.name %>',	
		    		'<%= store_item.strain %>',
		    		'<%= store_item.subcategory %>',
		    		'<%= store_item.costperunit %>']);
		  		break;
		  		}	


  		<% end %>      


      var table = new google.visualization.Table(document.getElementById("table_<%= maincategory %>"));

 	  var cssClassNames = {headerRow: "simple-weed-google-table-header", headerCell: "simple-weed-google-table-header-cell"};
      table.draw(view, {showRowNumber: false, allowHtml: true, cssClassNames: cssClassNames, width: '749px'});
            
      google.visualization.events.addListener(table, 'sort', setWidth);
      setWidth();
      google.visualization.events.addListener(table, 'select', selectHandler);
      function selectHandler(e) {
        var selection = table.getSelection();         /** gets everything that's selected **/
        var item = selection[0];                      /** we only support selecting one at this time, if more than one is selected, we'll just use the first    item **/			        
        var str = data.getFormattedValue(item.row, 0); /** gets the link stored in the first column of the selected row, ie <a data-remote="/students/29" data-                                                   target="#modal" data-toggle="modal" href="/students/29">Davvy</a>  **/        
        var target = $(str).attr("href");   /** from that string, only extract the href attr **/
        
        $("#modal").load(target, function() {   /** and load that href into the modal.  This is similar to the modal code in application.html.erb **/
          $("#modal").modal("show"); 
        });
      }
	})();

	function setWidth() {
	  var title = "Name";
      var width = "400px";
      $('.google-visualization-table-th:contains(' + title + ')').css('width', width);
	}
</script>
		</div>	 <!-- empty div required for jquery accordion -->
		
	<% end %> <!-- end of grouped_store_items -->

</div> <!-- #accordion -->
<script>
$(function() {
	$( "#accordion" ).accordion({
	  heightStyle: "content", //allows divs to be different height.  Very important
	  collapsible: true, 	//allows all elements to be collabsible		      
	});
});
</script>